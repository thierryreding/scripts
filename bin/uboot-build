#!/bin/sh

topdir=$(cd ${0%/*}/.. && pwd)
. $topdir/lib/cross-compile.sh

ARCH=
SOC=
BOARDS=
incremental=no
strict=no

while test $# -gt 0; do
	if test -n "$prev"; then
		eval "$prev=$1"; prev=
		shift; continue
	fi

	case $1 in
		--arch)
			prev=ARCH
			shift
			;;

		--soc)
			prev=SOC
			shift
			;;

		--jobs)
			prev=JOBS
			shift
			;;

		--strict)
			strict=yes
			shift
			;;

		--incremental)
			incremental=yes
			shift
			;;

		*)
			BOARDS="$BOARDS $1"
			shift
			;;
	esac
done

if test -z "$JOBS"; then
	JOBS=1
fi

if test -n "$ARCH"; then
	FILTER="(\$2 == \"$ARCH\")"
fi

if test -n "$SOC"; then
	if test -n "$FILTER"; then
		FILTER="$FILTER && "
	fi

	FILTER="$FILTER(\$4 == \"$SOC\" || \$4 ~ /$SOC/)"
fi

if test -n "$BOARDS"; then
	BOARD_FILTER=

	for board in $BOARDS; do
		if test -n "$BOARD_FILTER"; then
			BOARD_FILTER="$BOARD_FILTER || "
		fi

		BOARD_FILTER="$BOARD_FILTER(\$7 == \"$board\")"
	done

	if test -n "$FILTER"; then
		FILTER="$FILTER && "
	fi

	FILTER="$FILTER($BOARD_FILTER)"
fi

if test -n "$FILTER"; then
	FILTER="($FILTER)"
fi

awk "/^#/ || /^$/ { next }; $FILTER { print \$2\" \"\$4\" \"\$5\" \"\$7 }" boards.cfg |
	while read arch soc vendor board; do
		KBUILD_OUTPUT="build/${soc}/${board}"
		export KBUILD_OUTPUT

		if test -d "$KBUILD_OUTPUT"; then
			if test "x$incremental" = "xno"; then
				rm -rf "$KBUILD_OUTPUT"
			fi
		fi

		if ! test -d "$KBUILD_OUTPUT"; then
			mkdir -p "$KBUILD_OUTPUT"
			incremental=no
		fi

		if ! test -f "$KBUILD_OUTPUT/.config"; then
			incremental=no
		fi

		cross_compile_prepare $arch

		echo -en "building \033[35m${soc}\033[0m/\033[33m${board}\033[0m..."

		if test "x$incremental" = "xno"; then
			make "${board}_defconfig" -j$JOBS > "$KBUILD_OUTPUT/config.log" 2>&1
		fi

		(
			# redirect stdout to stderr and stderr to stdout so
			# that tee can write stderr to error.log (tee reads
			# only stdout via the pipe)
			make -j$JOBS 3>&1 1>&2 2>&3 | tee "$KBUILD_OUTPUT/error.log"
			# need $PIPESTATUS here because $? contains tee's exit code
			exit $PIPESTATUS
		) &> "$KBUILD_OUTPUT/build.log"
		rc=$?

		if test "x$rc" != "x0"; then
			echo -e "\033[1;31mfailed ($rc)\033[0m"
			rc=77
			break
		else
			if test -s "$KBUILD_OUTPUT/error.log"; then
				echo -e "\033[1;33mdone ($rc)\033[0m"

				if test "x$strict" = "xyes"; then
					rc=77
					break
				fi
			else
				echo -e "\033[1;32mdone\033[0m"
			fi
		fi

		cross_compile_cleanup
	done

exit $rc
